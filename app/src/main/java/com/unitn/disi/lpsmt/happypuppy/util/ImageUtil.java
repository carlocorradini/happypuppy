package com.unitn.disi.lpsmt.happypuppy.util;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.drawable.Drawable;

import androidx.annotation.DrawableRes;
import androidx.core.content.ContextCompat;

import com.unitn.disi.lpsmt.happypuppy.App;

/**
 * Image utility class
 *
 * @author Carlo Corradini
 */
public final class ImageUtil {
    /**
     * Return the {@link Bitmap image} identified by given id from {@link Drawable} resource
     *
     * @param id The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier.
     * @return {@link Bitmap image} identified by given id from {@link Drawable} resource
     */
    public static Bitmap fromDrawable(@DrawableRes int id) {
        Drawable drawable = ContextCompat.getDrawable(App.getContext(), id);
        if (drawable == null) return null;

        Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(bitmap);
        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
        drawable.draw(canvas);

        return bitmap;
    }

    /**
     * Return the {@link Bitmap image} identified by given id resized from {@link Drawable} resource
     *
     * @param id     The desired resource identifier, as generated by the aapt tool. This integer encodes the package, type, and resource entry. The value 0 is an invalid identifier.
     * @param width  The new bitmap's desired width.
     * @param height The new bitmap's desired height.
     * @return {@link Bitmap image} identified by given id from {@link Drawable} resource resized
     */
    public static Bitmap fromDrawable(@DrawableRes int id, int width, int height) {
        Bitmap bitmap = fromDrawable(id);
        return bitmap != null ? Bitmap.createScaledBitmap(bitmap, width, height, false) : null;
    }
}
